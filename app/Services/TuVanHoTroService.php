<?php
/**
 * Created by PhpStorm.
 * User: ginv2
 * Date: 6/19/20
 * Time: 09:32
 */

namespace App\Services;


use App\Repositories\TuVanHoTroRepositoryInterface;
use Carbon\Carbon;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Session;
use Auth;
class TuVanHoTroService extends AppService
{
    protected $tuVanHoTro;
//    protected $notificationService;
    public function __construct(TuVanHoTroRepositoryInterface $tuVanHoTro,
                                NotificationService $notificationService
    )
    {
        $this->tuVanHoTro = $tuVanHoTro;
        $this->notificationService = $notificationService;
    }

    public function getAll()
    {
        return parent::getAll(); // TODO: Change the autogenerated stub
    }

    public function clientThemTuVanHoTro($data){
        $tuvan = $this->tuVanHoTro->clientThemTuVanHoTro($data);
        if(isset($tuvan->id)){
            $adminUsers = [1, 2, 3, 28];
            $notifiData = [];
            foreach ($adminUsers as $user){
                $notifiData[] = [
                    'message_title' => $tuvan->tieu_de,
                    'message_content' => $tuvan->noi_dung,
                    'read_time' => null,
                    'recceive_user_id' => $user,
                    'sending_time' => Carbon::now(),
                    'sending_user_id' => -1,
                    'data_id' => $tuvan->id,
                    'module_name' => 'tu_van_ho_tro',
                    'status' => 1,
                    'sending_user_fullname' => $tuvan->ten_nguoi_gui
                ];
            }
            $this->notificationService->pushNotification($notifiData);
        }
    }
    public function AuthThemTuVanHoTro($data){
        $dataAuth=[
            'tieu_de' => $data["tieu_de"],
            'noi_dung' => $data["noi_dung"],
            'nguoi_gui_id' => Auth::user()->id,
            'ten_nguoi_gui' => Auth::user()->name,
            'email_nguoi_gui' => Auth::user()->email,
            'so_dien_thoai_nguoi_gui' => Auth::user()->phone_number,
        ];
        $tuvan = $this->tuVanHoTro->clientThemTuVanHoTro($dataAuth);
        if(isset($tuvan->id)){
            $adminUsers = [1, 2, 3, 28];
            $notifiData = [];
            foreach ($adminUsers as $user){
                $notifiData[] = [
                    'message_title' => $tuvan->tieu_de,
                    'message_content' => $tuvan->noi_dung,
                    'read_time' => null,
                    'recceive_user_id' => $user,
                    'sending_time' => Carbon::now(),
                    'sending_user_id' => -1,
                    'data_id' => $tuvan->id,
                    'module_name' => 'tu_van_ho_tro',
                    'status' => 1,
                    'sending_user_fullname' => Auth::user()->name
                ];
            }
            $this->notificationService->pushNotification($notifiData);
        }
    }

    public function findOne($id){
        return $this->tuVanHoTro->findOne($id);
    }

    public function traLoiYeuCau($id, $data){
        if($this->tuVanHoTro->traLoiYeuCau($id, $data)){
            $yeucau = $this->tuVanHoTro->findOne($id);;
            $toemail = [
                'email_nguoi_gui' => $yeucau->email_nguoi_gui,
                'ten_nguoi_gui' => $yeucau->ten_nguoi_gui,
                'id_yeu_cau' => $yeucau,
                'tieu_de' => $data['tieu_de_phan_hoi']
            ];
            try{
                Mail::send('ho_tro.email_thong_bao_tra_loi', ['email_content' => $yeucau, 'tieu_de_phan_hoi' => $data['tieu_de_phan_hoi']],function($message) use ($toemail) {
                    $message->to($toemail['email_nguoi_gui'], $toemail['ten_nguoi_gui'])->subject($toemail['tieu_de']);
                });

                return true;
            }catch (\Exception $ex){
                Log::error("Trả lời yêu cầu tư vấn: " . $ex->getMessage());
            }
        }
        return false;
    }
}